

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import os

files = os.listdir('./Histories/CSV')
model_names = sorted(['./Histories/CSV/'+i for i in files if i.endswith('.csv')])
df_array = [pd.read_csv(i) for i in model_names if i.endswith('.csv')]
print(model_names)

plt.figure(figsize=(15,5))
plt.subplot(121)
plt.plot(df_array[0]['val_accuracy'])
plt.plot(df_array[0]['accuracy'])
plt.title('DenseNet Accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.subplot(122)
plt.plot(df_array[0]['val_loss'])
plt.plot(df_array[0]['loss'])
plt.title('DenseNet Loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.savefig('DenseNet_stats.svg', format='svg')
plt.show()

plt.figure(figsize=(15,11))
plt.subplot(221)
plt.plot(df_array[1]['auxilliary_output_1_accuracy'],label='aux1_acc')
plt.plot(df_array[1]['auxilliary_output_2_accuracy'],label='aux2_acc')
plt.plot(df_array[1]['val_auxilliary_output_1_accuracy'],label='aux1_val_acc')
plt.plot(df_array[1]['val_auxilliary_output_2_accuracy'],label='aux2_val_acc')
plt.title('InceptionNet Auxilliary Accuracies')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(loc='upper left')
plt.subplot(222)
plt.plot(df_array[1]['auxilliary_output_1_loss'],label='aux1_loss')
plt.plot(df_array[1]['auxilliary_output_2_loss'],label='aux2_loss')
plt.plot(df_array[1]['val_auxilliary_output_1_loss'],label='aux1_val_loss')
plt.plot(df_array[1]['val_auxilliary_output_2_loss'],label='aux2_val_loss')
plt.title('InceptionNet Auxilliary Losses')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(loc='upper left')
plt.subplot(223)
plt.plot(df_array[1]['val_output_accuracy'])
plt.plot(df_array[1]['output_accuracy'])
plt.title('InceptionNet Accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.subplot(224)
plt.plot(df_array[1]['val_output_loss'])
plt.plot(df_array[1]['output_loss'])
plt.title('InceptionNet Loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.savefig('InceptionNet_stats.svg', format='svg')
plt.show()

plt.figure(figsize=(15,5))
plt.subplot(121)
plt.plot(df_array[2]['val_accuracy'])
plt.plot(df_array[2]['accuracy'])
plt.title('MobileNet Accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.subplot(122)
plt.plot(df_array[2]['val_loss'])
plt.plot(df_array[2]['loss'])
plt.title('MobileNet Loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.savefig('MobileNet_stats.svg', format='svg')
plt.show()

plt.figure(figsize=(15,5))
plt.subplot(121)
plt.plot(df_array[3]['val_accuracy'])
plt.plot(df_array[3]['accuracy'])
plt.title('ResNext Accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.subplot(122)
plt.plot(df_array[3]['val_loss'])
plt.plot(df_array[3]['loss'])
plt.title('ResNext Loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.savefig('ResNext_stats.svg', format='svg')
plt.show()

plt.figure(figsize=(15,5))
plt.subplot(121)
plt.plot(df_array[5]['val_accuracy'])
plt.plot(df_array[5]['accuracy'])
plt.title('XCeptionNet Accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.subplot(122)
plt.plot(df_array[5]['val_loss'])
plt.plot(df_array[5]['loss'])
plt.title('XCeptionNet Loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.savefig('XCeptionNet_stats.svg', format='svg')
plt.show()


plt.figure(figsize=(15,5))
plt.subplot(121)
plt.plot(df_array[4]['val_accuracy'])
plt.plot(df_array[4]['accuracy'])
plt.title('SENet Accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.subplot(122)
plt.plot(df_array[4]['val_loss'])
plt.plot(df_array[4]['loss'])
plt.title('SENet Loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['validation', 'train'], loc='upper left')
plt.savefig('SENet_stats.svg', format='svg')
plt.show()




